;;;; -*-lisp-*-

(in-package :stumpwm)

(asdf:oos 'asdf:load-op 'swank)
(swank:create-server :dont-close t)

(setf *debug-level* 0)
(setf *show-command-backtrace* t)

(set-prefix-key (kbd "C-a"))
(define-key *root-map* (kbd "a") "meta C-a")

(define-key *top-map* (kbd "M-TAB") "other-in-frame")
(define-key *root-map* (kbd "C-a") "other-in-frame")
(define-key *root-map* (kbd "C-n") "next-in-frame")
(define-key *root-map* (kbd "n") "next-in-frame")
(define-key *root-map* (kbd "C-p") "prev-in-frame")
(define-key *root-map* (kbd "p") "prev-in-frame")
(define-key *root-map* (kbd "w") "echo-frame-windows")
(define-key *root-map* (kbd "\"") "frame-windowlist")
(define-key *root-map* (kbd "'") "select-window-by-name")
(define-key *root-map* (kbd "N") "number")

(define-key *root-map* (kbd "C-Left") "move-window left")
(define-key *root-map* (kbd "C-Right") "move-window right")
(define-key *root-map* (kbd "C-Up") "move-window up")
(define-key *root-map* (kbd "C-Down") "move-window down")

(define-key *root-map* (kbd "c") "exec st")
(define-key *root-map* (kbd "C") "exec PRIVATE_MODE=true st")
(define-key *root-map* (kbd "t") "time")
(define-key *root-map* (kbd "L") "exec xscreensaver-command -lock")
(define-key *root-map* (kbd "B") "exec xsel | xsel -bi")
(define-key *root-map* (kbd "/") "exec st bc /home/ben/.bcrc")

(define-key *root-map* (kbd "P") "exec playerctl play-pause")
(define-key *root-map* (kbd "<") "exec playerctl previous")
(define-key *root-map* (kbd ">") "exec playerctl next")

;; Take screenshot
;;
;; This conveniently matches the equivalent key on windows.  Unfortunately that takes screenshots directly to
;; the clipboard, something that scrot doesn't know how to do.  Neither do I, I've never been sure quite how
;; non-text content types work in X selections.  If scrot could write to sdtout then perhaps something could
;; pick that up, but that doesn't seem to be an option.  What *is* an option is to exec something on the saved
;; image, so a script could do something with it and then delete it.  Either this or finding a screenshot app
;; that supports what I want directly seems to be the way fowrward.
;;
;; Funnily enough, windows has the opposite problem, in that it seems to make it bloody difficult to write the
;; screenshot from the clipboard to a file.
(define-key *top-map* (kbd "s-S") "exec scrot -s")

(defprogram-shortcut chromium-browser :props '(:class "Google-chrome") :map *root-map* :key (kbd "W"))
(defprogram-shortcut firefox :props '(:class "firefox") :map *root-map* :key (kbd "F"))
(defprogram-shortcut tor-browser :props '(:class "Tor Browser") :map *root-map* :key (kbd "T"))

(define-frame-preference "Default"
  (0 t nil :class "Conkeror")
  (1 t nil :class "st-256color")
  (1 t nil :class "Emacs"))

(setf *mouse-focus-policy* :sloppy)
(setf *run-or-raise-all-groups* nil)

(defun banish-on-focus (cur last)
  (declare (ignore last))
  (multiple-value-bind (x y)
      (xlib:global-pointer-position *display*)
    (unless (eq cur (find-frame (current-group) x y))
      (banish))))

(add-hook *focus-frame-hook* 'banish-on-focus)

(set-focus-color "Black")
